var R = {
    host: '103.146.203.103',
    port: 3132
}

R.hostport = R.host + ':' + R.port;

R.apost = async function(url, token, obj) {
    var options = {
        method: 'post',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json; charset=utf-8'
        },
        body: JSON.stringify(obj)
    }
    if (token != '') options.headers['Authorization'] = 'Bearer ' + token;
    var res = await fetch(url, options)
    if (res.status == 200) return res.json()
    else return { 'status': res.status }
}

R.aput = async function(url, token, obj) {
    var options = {
        method: 'put',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json; charset=utf-8'
        },
        body: JSON.stringify(obj)
    }
    if (token != '') options.headers['Authorization'] = 'Bearer ' + token;
    var res = await fetch(url, options)
    if (res.status == 200) return res.json()
    else return { 'status': res.status }
}

R.aget = async function(url, token, obj) {
    var options = {
        method: 'get',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json; charset=utf-8'
        }
    }
    if (token != '') options.headers['Authorization'] = 'Bearer ' + token;
    var res = await fetch(url, options)
    if (res.status == 200) return res.json()
    else return { 'status': res.status }
}

R.adelete = async function(url, token, obj) {
    var options = {
        method: 'delete',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json; charset=utf-8'
        }
    }
    if (token != '') options.headers['Authorization'] = 'Bearer ' + token;
    var res = await fetch(url, options)
    if (res.status == 200) return res.json()
    else return { 'status': res.status }
}

R.createTable = function(obj) {
    var strHead = obj.head.map((head) => {
        return `<th>${head.label}</th>`
    }).join('');
    var strData = obj.data.map((data) => {
        return `<tr>${ obj.head.map((head) => {
          return `<td>${data[head.varname]}</td>`
      }).join('')}</tr>`
    }).join('');
    return `<section class="users-list-wrapper section">
                <div class="users-list-filter">
                    <div class="card">
                        <div class="card-content">
                            <div class="responsive-table">
                            <table id="table_id" class="display ">
                                <thead>
                                    <tr>${strHead}</tr>
                                </thead>
                                <tbody>
                                    ${strData}
                                </tbody>
                            </table>
                            </div>
                        </div>
                    </div>
                </div>
            </section>`;
}

R.createModal = function(obj) {
    var strForm = obj.form.map(function(options) {
        if (options.type == 'input') {
            return `<div class="row">
                  <div class="input-field col m12 s12">
                     <input id="${options.id}" type="text">
                     <label for="${options.id}" disabled>${options.label}</label>
                  </div>
               </div>`;
        } else if (options.type == 'select') {
            return `<div class="row">
                  <div class="input-field col m12 s12">
                     <select id="${options.id}">
                        <option value="" disabled selected>Pilih ${options.label}</option>
                        ${ options.select.map(function(select){
                          return `<option value="${select.value}" >${select.label}</option>`
                        }).join('') }
                     </select>
                     <label for="${options.id}">${options.label}</label>
                  </div>
               </div>`;
        }
    }).join('');
    return `<div id="${obj.id}" class="modal">
         <div class="modal-content">
            <h6 class="card-title">${obj.title}</h6>
            <form>
              ${strForm}
               <div class="row">
                  <div class="row">
                     <div class="input-field col s12">
                        <button id="submit" class="btn cyan waves-effect waves-light right" type="button" name="action">Submit
                        <i class="material-icons right">send</i>
                        </button>
                     </div>
                  </div>
               </div>
            </form>
         </div>
      </div>`;
}

R.panelTop = function( opt ) {
  return `<div class="row">
     <div class="col s12 m12">
        <div class="card">
           <div class="card-content">
              ${opt.str}
           </div>
        </div>
     </div>
  </div>`
}

R.breadcrumbsList = function(arr) {
    var str = arr.map(function(obj){
        return `<li class="breadcrumb-item">
            <a href="${obj.link}">${obj.label}</a>
        </li>`
    }).join('');
    if( arr.length == 0 ) {
        $('#listbreadcrubs').empty()
    } else {
        $('#listbreadcrubs').empty().html(str)
    }
}

R.getUrlVars = function() {
    var vars = [],
        hash;
    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
    for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split('=');
        vars.push(hash[0]);
        vars[hash[0]] = hash[1];
    }
    return vars;
}

R.isEmpty = function(obj) {
    var arr = Object.keys(obj).filter((head) => {
        return (obj[head] === null || obj[head] === undefined || obj[head] === "");
    })
    if (arr.length > 0) return {
        value: true,
        data: arr
    };
    else return {
        value: false,
        data: arr
    };
}

R.auth = function( auth ) {
    return auth == true ? true : false;
}
R.ROLES = [
    {
        'nama': 'Dashboard View1',
        'link': '/dashboard/view1/'
    },
    {
        'nama': 'Rekapitulasi DPT',
        'link': '/dpt/rekap/'
    },
    {
        'nama': 'Data DPT',
        'link': '/dpt/list/'
    },

    {
        'nama': 'Rekapitulasi Pemilih',
        'link': '/pemilih/rekap/'
    },

    {
        'nama': 'Data Pemilih',
        'link': '/pemilih/list/'
    },
    {
        'nama': 'Data Posko Kecamatan',
        'link': '/posko/list/'
    },
    {
        'nama': 'Data Posko Desa',
        'link': '/posko/list/desa/'
    },
    {
        'nama': 'Aktifitas Posko Kecamatan',
        'link': '/posko/activity/'
    },
    {
        'nama': 'Registrasi Posko Kecamatan',
        'link': '/posko/registrasi/kecamatan/'
    },
    {
        'nama': 'Registrasi Posko Desa',
        'link': '/posko/registrasi/desa/'
    },
    {
        'nama': 'Data Relawan',
        'link': '/relawan/list/'
    },
    {
        'nama': 'Data Pemilih',
        'link': '/relawan/listpemilih/'
    },
    {
        'nama': 'Aktifitas Relawan',
        'link': '/relawan/activity/'
    },
    {
        'nama': 'Monitoring Sebaran Posko',
        'link': '/sebaran/'
    },
    {
        'nama': 'Registrasi Akun Web',
        'link': '/admin/create/'
    },
    {
        'nama': 'Data Akun Akses',
        'link': '/admin/access/'
    },
    {
        'nama': 'Edit Akun Akses',
        'link': '/admin/role/'
    }
]

R.CSS_COLOR_NAMES = [
    "DarkGreen",
    "DarkKhaki",
    "DarkMagenta",
    "DarkOliveGreen",
    "DarkOrange",
    "DarkOrchid",
    "DarkRed",
    "DarkSalmon",
    "DarkSeaGreen",
    "DarkSlateBlue",
    "DarkSlateGray",
    "DarkSlateGrey",
    "DarkTurquoise",
    "DarkViolet",
    "DeepPink",
    "DeepSkyBlue",
    "DimGray",
    "DimGrey",
    "DodgerBlue",
    "FireBrick",
    "FloralWhite",
    "ForestGreen",
    "Fuchsia",
    "Gainsboro",
    "GhostWhite",
    "Gold",
    "GoldenRod",
    "Gray",
    "Grey",
    "Green",
    "GreenYellow",
    "HoneyDew",
    "HotPink",
    "IndianRed",
    "Indigo",
    "Ivory",
    "Khaki",
    "Lavender",
    "LavenderBlush",
    "LawnGreen",
    "LemonChiffon",
    "LightBlue",
    "LightCoral",
    "LightCyan",
    "LightGoldenRodYellow",
    "LightGray",
    "LightGrey",
    "LightGreen",
    "LightPink",
    "LightSalmon",
    "LightSeaGreen",
    "LightSkyBlue",
    "LightSlateGray",
    "LightSlateGrey",
    "LightSteelBlue",
    "LightYellow",
    "Lime",
    "LimeGreen",
    "Linen",
    "Magenta",
    "Maroon",
    "MediumAquaMarine",
    "MediumBlue",
    "MediumOrchid",
    "MediumPurple",
    "MediumSeaGreen",
    "MediumSlateBlue",
    "MediumSpringGreen",
    "MediumTurquoise",
    "MediumVioletRed",
    "MidnightBlue",
    "MintCream",
    "MistyRose",
    "Moccasin",
    "NavajoWhite",
    "Navy",
    "OldLace",
    "Olive",
    "OliveDrab",
    "Orange",
    "OrangeRed",
    "Orchid",
    "PaleGoldenRod",
    "PaleGreen",
    "PaleTurquoise",
    "PaleVioletRed",
    "PapayaWhip",
    "PeachPuff",
    "Peru",
    "Pink",
    "Plum",
    "PowderBlue",
    "Purple",
    "RebeccaPurple",
    "Red",
    "RosyBrown",
    "RoyalBlue",
    "SaddleBrown",
    "Salmon",
    "SandyBrown",
    "SeaGreen",
    "SeaShell",
    "Sienna",
    "Silver",
    "SkyBlue",
    "SlateBlue",
    "SlateGray",
    "SlateGrey",
    "Snow",
    "SpringGreen",
    "SteelBlue",
    "Tan",
    "Teal",
    "Thistle",
    "Tomato",
    "Turquoise",
    "Violet",
    "Wheat",
    "White",
    "WhiteSmoke",
    "Yellow",
    "YellowGreen",
];

/*
$(document).ready(async function () {
  var data = await R.aget('http://localhost:3131/get/relawan/pos?pos=534', "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc3QiLCJyb2xlIjoiYWRtaW4iLCJpYXQiOjE1OTgzNDE0ODAsImV4cCI6MTU5ODM1MjI4MH0.4aUC64yqNoMRWfZB1eEqy7lCPjPbBZOT7Tc-Klxb2po" )
  console.log(data)
  
});



    var str = R.createTable({
    head:[
      { 'label':'Nama', 'varname': 'nama' },
      { 'label':'Kelas Nama', 'varname': 'kelas' }
    ],
    data: [
      { 'nama':'Test', 'kelas': '10' }
    ]
  })
  console.log(str)
  */